<template>
    <div class="tables" style="width: 1200px;">
        <div class="title text-center">
           <h3 class="text-center">党员基本情况</h3> 
           <p>截至日期：2017年12月31日</p>
        </div>
        
        <div class="start-box box-pack" style="position: relative; top: -16px;">
            <p>填报单位：天房科技党总支</p>
            <p>第二表</p>
        </div>
        <div class="table-outer" style="margin-top: -10px;">
            <table align=center cellspacing=0 cellpadding=0 width="100%">
                <tr>
                    <td width="140" colspan=3 rowspan=2>项目</td>
                    <td style="border-right: none;border-bottom: none;" colspan=2></td>
                    <td colspan=5></td>
                    <td colspan=10>年龄</td>
                </tr>
                <tr>
                    <td style="border-left:none;width:60px;" colspan=2>总数</td>
                    <td width="60">预备<br>党员</td>
                    <td width="60">女</td>
                    <td width="60">少数<br>名族</td>
                    <td width="60">台湾<br>民族</td>

                    <td width="60">30岁<br>及以下</td>
                    <td width="60">31岁<br>至35岁</td>
                    <td width="60">36岁<br>至40岁</td>
                    <td width="60">41岁<br>至45岁</td>
                    <td width="60">46岁<br>至50岁</td>
                    <td width="60">51岁<br>至55岁</td>
                    <td width="60">56岁<br>至60岁</td>
                    <td width="60">61岁<br>至65岁</td>
                    <td width="60">66岁<br>至70岁</td>
                    <td width="60">71岁<br>及以上</td>
                </tr>
                <tr>
                   <td colspan=3>甲</td> 
                   <td></td>
                   <td width="60"><strong>A</strong></td>
                   <td><strong>B</strong></td>
                   <td><strong>C</strong></td>
                   <td><strong>D</strong></td>
                   <td><strong>E</strong></td>
                   <td><strong>F</strong></td>
                   <td><strong>G</strong></td>
                   <td><strong>H</strong></td>
                   <td><strong>I</strong></td>
                   <td><strong>J</strong></td>
                   <td><strong>K</strong></td>
                   <td><strong>L</strong></td>
                   <td><strong>M</strong></td>
                   <td><strong>N</strong></td>
                   <td><strong>O</strong></td>
                </tr>
                <tr  v-for="(item, index) in tablesData">

                    <td  class="justify" colspan=3 v-if="item.type == 1">{{item.label}}</td>

                    <td  class="justify" width='20' v-if="item.type == 3"></td>
                    <td  class="justify" colspan=2 v-if="item.type == 3">{{item.label}}</td>
                    
                    <td  class="justify" width='20'  v-if="item.type == 2" rowspan=7>{{item.title}}</td>
                    <td  class="justify" colspan=2  v-if="item.type == 2">{{item.label}}</td>

                    <td  class="justify" width='20'  v-if="item.type == 7" rowspan=8>{{item.title}}</td>
                    <td  class="justify" colspan=2  v-if="item.type == 7">{{item.label}}</td>
                    
                    <td  class="justify"  v-if="item.type == 4" style="border-left: none;" colspan=2>{{item.label}}</td>
                    
                    <td  class="justify" v-if="item.type == 5" width="20" style="border:none;"></td>
                    <td  class="justify" v-if="item.type == 5" style="border-left: none;">{{item.label}}</td>
                    
                    <td  class="justify" v-if="item.type == 6" width="20" style="border-left: none;"></td>
                    <td  class="justify" v-if="item.type == 6" style="border-left: none;">{{item.label}}</td>

                    <td  class="justify" width=30><strong>{{index+1}}</strong></td>

                    <td v-for="(inner, inx) in item.lists">
                        <input  v-if="inner.disabled"  type="text" :disabled="inner.disabled" :class="{'yellow2': inner.isYellow}" v-model="inner.value" :style="{'color': inner.disabled ? '#111' : inner.class, 'backgroundColor': (index == 0 || index == 1 || index == 2 || inx == 0) ? '#a1d8ff' : (index == 9 || index == 16 || index == 18) ? '#ffd4bc' : '' }">
                        <input v-if="!inner.disabled" type="text" :disabled="inner.newDis" :class="{'yellow2': inner.isYellow}" v-model="inner.value" :style="{'color': inner.disabled ? '#111' : inner.class, 'backgroundColor': (index == 0 || index == 1 || index == 2 || inx == 0) ? '#a1d8ff' : (index == 9 || index == 16 || index == 18) ? '#ffd4bc' : '' }">
                    </td>
                    
                </tr>  
            </table>
            <div class="tips-outer start-box">
                <p>补充资料：</p>
                <div class="tips box-flex">
                    <p>1.能够按时按标准交纳党费<input type="text" :disabled="footerVal[0].disabled" :style="{color: footerVal[0].class}" v-model="footerVal[0].value" class="yellow">名，经批准少交党费的党员<input type="text" class="yellow" :disabled="footerVal[1].disabled" :style="{color: footerVal[1].class}" v-model="footerVal[1].value">名，免交党费的党员<input type="text" class="yellow" :disabled="footerVal[2].disabled" :style="{color: footerVal[2].class}" v-model="footerVal[2].value">名，自愿一次性多交纳1000元以上党费的<input type="text" :disabled="footerVal[3].disabled" :style="{color: footerVal[3].class}" v-model="footerVal[3].value" class="yellow">名。</p>
                    <p>2.生活不能自理、丧失劳动能力的党员<input type="text" :disabled="footerVal[4].disabled" :style="{color: footerVal[4].class}" v-model="footerVal[4].value"  class="yellow">名。</p>
                    <p>3.企事业、民办非企业单位党员中担任高级专业技术职务的<input type="text" :disabled="footerVal[5].disabled" :style="{color: footerVal[5].class}" v-model="footerVal[5].value">名，其中女性<input type="text" :disabled="footerVal[6].disabled" :style="{color: footerVal[6].class}" v-model="footerVal[6].value">名，35岁及以下的<input type="text" :disabled="footerVal[7].disabled" :style="{color: footerVal[7].class}" v-model="footerVal[7].value">名；担任中级专业技术职务的<input type="text" :disabled="footerVal[8].disabled" :style="{color: footerVal[8].class}" v-model="footerVal[8].value">名，其中女性<input type="text" :disabled="footerVal[9].disabled" :style="{color: footerVal[9].class}" v-model="footerVal[9].value">名，35岁及以下的<input type="text" :disabled="footerVal[10].disabled" :style="{color: footerVal[10].class}" v-model="footerVal[10].value">名；担任初级专业技术职务的<input type="text" :disabled="footerVal[11].disabled" :style="{color: footerVal[11].class}" v-model="footerVal[11].value">名，其中女性<input type="text" :disabled="footerVal[12].disabled" :style="{color: footerVal[12].class}" v-model="footerVal[12].value">名，35岁及以下的<input type="text" :disabled="footerVal[13].disabled" :style="{color: footerVal[13].class}" v-model="footerVal[13].value">名。</p>
                </div>
            </div>
        </div>
        <router-view></router-view>
    </div>
</template>
<script>
	export default {
		name: 'form1',
		data() {
			return {
                msg: 'this is table',
                tablesData: [  
                    {type: 1,title: '', label: '总计',  disabled: false, calc: 'for (let i = 0; i < 15; i++) {let tp1 = this.origin[1].lists[i].value == "" ? 0 : this.origin[1].lists[i].value; let tp2 = this.origin[17].lists[i].value == "" ? 0 : this.origin[17].lists[i].value; let tp3 = this.origin[19].lists[i].value == "" ? 0 : this.origin[19].lists[i].value; let tp4 = this.origin[20].lists[i].value == "" ? 0 : this.origin[20].lists[i].value; let tp5 = this.origin[21].lists[i].value == "" ? 0 : this.origin[21].lists[i].value; let tp6 = this.origin[22].lists[i].value == "" ? 0 : this.origin[22].lists[i].value; this.origin[0].lists[i].value = parseInt(tp1) + parseInt(tp2)+ parseInt(tp3)+ parseInt(tp4)+ parseInt(tp5)+ parseInt(tp6)}', bgcolor: "#222", lists: []},

                    {type: 1,title: '', label: '一、在岗职工', calc: 'for (let i = 0; i < 15; i++) {let tp1 = this.origin[2].lists[i].value == "" ? 0 : this.origin[2].lists[i].value; let tp2 = this.origin[10].lists[i].value == "" ? 0 : this.origin[10].lists[i].value; this.origin[1].lists[i].value = parseInt(tp1) + parseInt(tp2)}', disabled: false, bgcolor: "#222", lists: []},

                    {type: 7,title: '公共制单位', label: '合计', calc: 'for (var i = 0; i < 15; i++) { let temp = 0; if (i == 0) { for (let j = 3; j < 9; j++) { let ii = this.origin[j].lists[i].value == "" ? 0 : this.origin[j].lists[i].value; temp += parseInt(ii)}  } else { for (let j = 3; j < 8; j++) { let jj = this.origin[j].lists[i].value == "" ? 0 : this.origin[j].lists[i].value; temp += parseInt(jj) }  } this.origin[2].lists[i].value = temp }', disabled: false, bgcolor: "#222", lists: []},

                    {type: 4, title: '', label: '党政机关工作人员', calc: 'let temp = 0;for (let i = 5; i < 15; i++) {let tp = this.origin[3].lists[i].value == "" ? 0 : this.origin[3].lists[i].value; temp += parseInt(tp)};this.origin[3].lists[0].value = temp',  disabled: false, bgcolor: "#222", lists: []},
                    {type: 4, title: '', label: '事业单位管理人员', calc: 'let temp = 0;for (let i = 5; i < 15; i++) {let tp = this.origin[4].lists[i].value == "" ? 0 : this.origin[4].lists[i].value; temp += parseInt(tp)};this.origin[4].lists[0].value = temp', disabled: false, bgcolor: "#222", lists: []},
                    {type: 4, title: '', label: '事业单位专业技术人员', calc: 'let temp = 0;for (let i = 5; i < 15; i++) { let tp = this.origin[5].lists[i].value == "" ? 0 : this.origin[5].lists[i].value; temp += parseInt(tp)};this.origin[5].lists[0].value = temp', disabled: false, bgcolor: "#222", lists: []},
                    {type: 4, title: '', label: '企业管理人员', calc: 'let temp = 0;for (let i = 5; i < 15; i++) {let tp = this.origin[6].lists[i].value == "" ? 0 : this.origin[6].lists[i].value; temp += parseInt(tp)};this.origin[6].lists[0].value = temp', disabled: false, bgcolor: "#222", lists: []},
                    {type: 4, title: '', label: '企业专业技术人员', calc: 'let temp = 0;for (let i = 5; i < 15; i++) {let tp = this.origin[7].lists[i].value == "" ? 0 : this.origin[7].lists[i].value; temp += parseInt(tp)};this.origin[7].lists[0].value = temp', disabled: false, bgcolor: "#222", lists: []},
                    {type: 5, title: '', label: '工勤技能人员', calc: 'let temp = 0;for (let i = 5; i < 15; i++) {let tp = this.origin[8].lists[i].value == "" ? 0 : this.origin[8].lists[i].value; temp += parseInt(tp)};this.origin[8].lists[0].value = temp', disabled: false, bgcolor: "#222", lists: []},
                    {type: 6, title: '', label: '农民工',  calc: 'let temp = 0;for (let i = 5; i < 15; i++) { let tp = this.origin[9].lists[i].value == "" ? 0 : this.origin[9].lists[i].value; temp += parseInt(tp)}; this.origin[9].lists[0].value = temp', disabled: false, bgcolor: "#222", lists: []},
                    {type: 2,title: '非公有制单位', label: '合计', calc:'for (var i = 0; i < 15; i++) { let temp = 0; for (let j = 11; j < 16; j++) {let tp = this.origin[j].lists[i].value == "" ? 0 : this.origin[j].lists[i].value; temp += parseInt(tp) } this.origin[10].lists[i].value = temp }', disabled: false, bgcolor: "#222", lists: []},
                    {type: 4, title: '', label: '企业管理人员', calc: 'let temp = 0;for (let i = 5; i < 15; i++) {let tp = this.origin[11].lists[i].value == "" ? 0 : this.origin[11].lists[i].value; temp += parseInt(tp)};this.origin[11].lists[0].value = temp', disabled: false, bgcolor: "#222", lists: []}, 
                    {type: 4, title: '', label: '企业专业技术人员', calc: 'let temp = 0;for (let i = 5; i < 15; i++) {let tp = this.origin[12].lists[i].value == "" ? 0 : this.origin[12].lists[i].value; temp += parseInt(tp)};this.origin[12].lists[0].value = temp', disabled: false, bgcolor: "#222", lists: []},
                    {type: 4, title: '', label: '民办非企业 单位管理人员', calc: 'let temp = 0;for (let i = 5; i < 15; i++) {let tp = this.origin[13].lists[i].value == "" ? 0: this.origin[13].lists[i].value; temp += parseInt(tp)}; this.origin[13].lists[0].value = temp', disabled: false, bgcolor: "#222", lists: []},
                    {type: 4, title: '', label: '民办非企业 专业技术人员', calc: 'let temp = 0;for (let i = 5; i < 15; i++) {let tp = this.origin[14].lists[i].value == "" ? 0 : this.origin[14].lists[i].value; temp += parseInt(tp)}; this.origin[14].lists[0].value = temp', disabled: false, bgcolor: "#222", lists: []},
                    {type: 5, title: '', label: '工勤技能人员', calc: 'let temp = 0;for (let i = 5; i < 15; i++) { let tp = this.origin[15].lists[i].value == "" ? 0 : this.origin[15].lists[i].value; temp += parseInt(tp)};this.origin[15].lists[0].value = temp', disabled: false, bgcolor: "#222", lists: []},
                    {type: 6, title: '', label: '农民工',  calc: 'let temp = 0;for (let i = 5; i < 15; i++) {let tp = this.origin[16].lists[i].value == "" ? 0 : this.origin[16].lists[i].value;  temp += parseInt(tp)};this.origin[16].lists[0].value = temp', disabled: false, bgcolor: "#222", lists: []},
                    {type: 1, title: '', label: '二、农牧渔民',  calc: 'let temp = 0;for (let i = 5; i < 15; i++) { let tp = this.origin[17].lists[i].value == "" ? 0 : this.origin[17].lists[i].value; temp += parseInt(tp)};this.origin[17].lists[0].value = temp', disabled: false, bgcolor: "#222", lists: []},
                    {type: 3, title: '', label: '外出务工经商人员',  calc: 'let temp = 0;for (let i = 5; i < 15; i++) {let tp = this.origin[18].lists[i].value == "" ? 0 : this.origin[18].lists[i].value; temp += parseInt(tp)};this.origin[18].lists[0].value = temp', disabled: false, bgcolor: "#222", lists: []},
                    {type: 1, title: '', label: '三、军人、武警',  calc: 'let temp = 0;for (let i = 5; i < 15; i++) {let tp = this.origin[19].lists[i].value == "" ? 0 : this.origin[19].lists[i].value; temp += parseInt(tp)};this.origin[19].lists[0].value = temp', disabled: false, bgcolor: "#222", lists: []},
                    {type: 1, title: '', label: '四、学 生', calc: 'let temp = 0;for (let i = 5; i < 15; i++) {let tp = this.origin[20].lists[i].value == "" ? 0 : this.origin[20].lists[i].value; temp += parseInt(tp)};this.origin[20].lists[0].value = temp', disabled: false, bgcolor: "#222", lists: []},
                    {type: 1, title: '', label: '五、离退休人员',  calc: 'let temp = 0;for (let i = 5; i < 15; i++) { let tp = this.origin[21].lists[i].value == "" ? 0 : this.origin[21].lists[i].value;  temp += parseInt(tp)}; this.origin[21].lists[0].value = temp', disabled: false, bgcolor: "#222", lists: []},
                    {type: 1, title: '', label: '其它', calc: 'let temp = 0;for (let i = 5; i < 15; i++) { let tp =  this.origin[22].lists[i].value == "" ? 0 : this.origin[22].lists[i].value; temp += parseInt(tp)};this.origin[22].lists[0].value = temp', disabled: false, bgcolor: "#222", lists: []},
                ],
                orignData: {},
                lists: [], 
                colors: [],
                footers: [],
                footerVal: [
                    {
                        key: 'FOOTER1',
                        value: '',
                        orignValue: '',
                        class: '',
                        disabled: true,
                    },
                    {
                        key: 'FOOTER2',
                        value: '',
                        orignValue: '',
                        class: '',
                        disabled: true,
                    },
                    {
                        key: 'FOOTER3',
                        value: '',
                        orignValue: '',
                        class: '',
                        disabled: true,
                    },
                    {
                        key: 'FOOTER4',
                        value: '',
                        orignValue: '',
                        class: '',
                        disabled: true,
                    },
                    {
                        key: 'FOOTER5',
                        value: '',
                        orignValue: '',
                        class: '',
                        disabled: true,
                    },
                    {
                        key: 'FOOTER6',
                        value: '',
                        orignValue: '',
                        class: '',
                        disabled: true,
                    },{
                        key: 'FOOTER7',
                        value: '',
                        orignValue: '',
                        class: '',
                        disabled: true,
                    },
                    {
                        key: 'FOOTER8',
                        value: '',
                        orignValue: '',
                        class: '',
                        disabled: true,
                    },
                    {
                        key: 'FOOTER9',
                        value: '',
                        orignValue: '',
                        class: '',
                        disabled: true,
                    },
                    {
                        key: 'FOOTER10',
                        value: '',
                        orignValue: '',
                        class: '',
                        disabled: true,
                    },{
                        key: 'FOOTER11',
                        value: '',
                        orignValue: '',
                        class: '',
                        disabled: true,
                    },{
                        key: 'FOOTER12',
                        value: '',
                        orignValue: '',
                        class: '',
                        disabled: true,
                    },{
                        key: 'FOOTER13',
                        value: '',
                        orignValue: '',
                        class: '',
                        disabled: true,
                    },{
                        key: 'FOOTER14',
                        value: '',
                        orignValue: '',
                        class: '',
                        disabled: true,
                    }
                ],
                origin: {},
			}
		},
        props: {
            orders: {
                type: Object,
                default: function() {
                    return {}
                }
            },
            remberData: {
                type: Object,
                default: function() {
                    return {
                        remberType: '',
                        remberYear: ''
                    }
                }
            },
            setNull: {
                type: Boolean,
                default: function() {
                    return false;
                }
            }
        },
        computed: {
            remberStat() {
                return this.$store.state.remberStatus;
            },
            nullStatus() {
                return this.setNull;
            }
        },
		watch: {
            'orders' (newD, oldD) {
                if (newD != oldD) {
                    this.todo(newD)
                };
            },
            'remberStat' (newD, oldD) {
                if (!newD) {
                    // 录改
                    for (let i = 0; i < this.origin.length; i++) {
                        this.origin[i].lists.forEach((item, index) => {
                            if (!item.disabled) {
                                if (item.newDis == true) {
                                    this.origin[i].lists[index].newDis = false;
                                };
                            };
                        })
                    };
                    this.footerVal.forEach((item, index) => {
                        if (item.disabled) {
                            this.footerVal[index].disabled = false;
                        };
                    })
                } else {
                    //取消
                    for (let i = 0; i < this.origin.length; i++) {
                        this.origin[i].lists.forEach((item, index) => {
                            if (!item.disabled) {
                                if (item.newDis == false) {
                                    this.origin[i].lists[index].newDis = true;
                                    if (this.origin[i].lists[index].orignValue != this.origin[i].lists[index].value) {
                                        this.origin[i].lists[index].value = this.origin[i].lists[index].orignValue;
                                    };
                                };
                            };
                        })
                    };
                    this.footerVal.forEach((item, index) => {
                        if (!item.disabled) {
                            this.footerVal[index].disabled = true;
                            if (this.footerVal[index].orignValue != this.footerVal[index].value) {
                                this.footerVal[index].value = this.footerVal[index].orignValue;
                            };
                        };
                    })
                }
            },
            '$route' () {
                this.init();
            },
            nullStatus(n, o) {
               console.log(n, o)
            }
		},
		methods: {
            //初始化
            init() {
                let that = this;
                const count = 15;

                this.orignData = Object.assign({}, JSON.parse(localStorage.getItem('formData')))
                // 第一步填数据
                this.tablesData.forEach((item, index) => {
                    this.tablesData[index].lists = Object.assign([], this.splitData(index));  
                })


                // 第二步设置颜色 和 状态
                for (let i = 0; i < this.tablesData.length; i++) {
                    that.tablesData[i].lists.forEach((item, index) => {
                        that.tablesData[i].lists[index].disabled = that.splitData2(i)[index] == 2 ? true : false;
                        that.tablesData[i].lists.isYellow = that.splitData2(i)[index] == 1 ? true : false;
                    })
                };
                

                // 获取footer 数据
                this.footers = [];
                for(let its in this.orignData.list) {
                    if ( /footer/ig.test(its) ) {
                        this.footers.push({
                            key: its,
                            value: this.orignData.list[its],
                            orignValue: this.orignData.list[its],
                            class: '',
                            disabled: true,
                        });
                    };
                }

                //footer 数据填充 
                this.footers.forEach((item, index) =>  {
                    let temp = item.key.split('FOOTER')[1] - 1;
                    this.$set(this.footerVal, temp, Object.assign({}, item) )
                })

                //当未直通和清空后没有footer字段, 重置数据
                if (this.footers.length == 0) {
                    this.footerVal.forEach(item => {
                        item.value = '';
                        item.orignValue = '';
                    })
                };

                //数据处理完毕 需要保存一份本地的原始数据 用来watch
                this.origin = Object.assign([], this.tablesData);

                // 定义多个watch 检测数据改动
                for (let k = 0; k < this.origin.length; k++) {
                    this.$watch(function() {
                        return this.origin[k].lists;
                    }, function(newV, oldV) {  
                        that.checkDuty(newV, k);
                    }, {deep: true}) 
                };

                this.$watch('origin', function(newV, oldV) {
                    for (let i = 0; i < this.origin.length; i++) {
                        if (this.origin[i].calc) {
                            eval(this.origin[i].calc)
                        };
                    };
                },{deep: true});

                //监测 footers 数据
                this.$watch('footerVal', function(newV, oldV) {
                    newV.forEach((item, index) => {
                        that.footerVal[index].class = item.orignValue != item.value ? 'red' : '';
                    })
                }, {deep: true})
            },
            // 修改后的数据 提交前的处理
            dealData(origin, footer) {
                let tempArr = [], postJson = {};
                for (let i = 0; i < origin.length; i++) {
                    origin[i].lists.forEach((item, index) => {
                        //能修改的才是我们需要的数据
                        if (!item.disabled && item.value != item.orignValue) {
                            tempArr.push(Object.assign(item, {index: i+1} ))
                        };
                    })
                };
                tempArr.forEach((item, index) => {
                    let key = String.fromCharCode(item.key)+item.index;
                    postJson[key] = item.value;
                })
                footer.forEach((item, index) => {
                    if (item.value != item.orignValue) {
                        postJson[item.key] = item.value;
                    };
                })
                return JSON.stringify(postJson);
            },
            ajax(method, url, data) {
                let qs = require('qs');
                return method.toLowerCase() == 'post'  ? this.axios({
                    method: method,
                    url: url,
                    data: qs.stringify(data)
                }) : this.axios({
                    method: method,
                    url: url,
                    params: data,
                })
            },
            //保存修改后的数据
            saveEdit() {
                let postData = {
                    dept_id: this.$store.state.remberId, 
                    year: '2017', 
                    type_id: '1', 
                    form_id: this.$route.name.split('-')[1], 
                    data: this.dealData(this.origin, this.footerVal)
                };
                this.$store.commit('setStatus', {stat: true}) 
                this.ajax('post', '/v1/report/edit', postData)
                .then(res => {
                    let needData = res.data;
                    if (needData.code == 200) {
                        this.$Message.success('录改成功');
                        this.detailContent();
                    } else {
                        that.$Message.error(needData.msg);
                    }
                })
                .catch(err => {
                    this.$Message.error('网络请求异常');
                })
            },
            todo(item) {
                let that = this;
                let postData = {
                    dept_id: this.$route.query.id ? this.$route.query.id : this.$store.state.remberId,
                    year: '2017',
                    type_id: this.remberData.remberType ? this.remberData.remberType : 1,
                    form_id: this.$route.name.split('-')[1]
                }
                switch(parseInt(item.type)) {
                    //清空报表
                    case 1: 
                        if (item.value == 1) {
                            this.ajax('post', '/v1/report/clear', postData)
                            .then(res => {
                                let needData = res.data;
                                if (needData.code == 200) {
                                    this.$Message.success('清空成功');
                                    this.detailContent();
                                } else {
                                    that.$Message.error(needData.msg);
                                }
                            })
                            .catch(err => {
                                this.$Message.error('网络请求异常');
                            })
                        };
                        break;
                    //报表直统
                    case 2: 
                        if (item.value == 1) {
                            this.ajax('post', '/v1/report/pull', postData)
                            .then(res => {
                                let needData = res.data;
                                if (needData.code == 200) {
                                    this.$Message.success('直统成功');
                                    this.detailContent();
                                } else {
                                    that.$Message.error(needData.msg);
                                }
                            })
                            .catch(err => {
                                this.$Message.error('网络请求异常');
                            })
                        };
                        break;
                    //报表汇总
                    case 3: 
                        if (item.value == 1) {
                            this.ajax('post', '/v1/report/sum', postData)
                            .then(res => {
                                let needData = res.data;
                                if (needData.code == 200) {
                                    this.$Message.success('汇总成功');
                                    this.detailContent();
                                } else {
                                    that.$Message.error(needData.msg);
                                }
                            })
                            .catch(err => {
                                this.$Message.error('网络请求异常');
                            })
                        };
                        break;
                    break;
                    //报表校核
                    case 4: console.log('报表校核'); 
                    break;
                    //打印
                    case 5: console.log('打印'); break;
                    //导出
                    case 6: console.log('导出'); break;
                    //上所解锁
                    case 7: 
                         break;
                    //开始录改
                    case 8: 
                        if (item.status) {
                            // 数据刷新 或者还原 
                            this.origin.forEach((item, index) => {
                                that.origin[index].newDis = false;
                            })
                        } else {
                            //启用可编辑的数据
                            this.origin.forEach((item, index) => {
                                that.origin[index].newDis = false;
                            })
                        }
                        break;
                    //保存报表
                    case 9: 
                        this.saveEdit();
                        break;
                    default: return;
                }
            },
            sortF(arr) {
                return arr.sort(function(a, b) {
                    return a.key-b.key;
                })
            },
            //查找行数据
            getList(id) {
                let temp = [];
                for(let it in this.orignData.list) {
                    if ( new RegExp( String.fromCharCode(id+65) ).test(it) ) {
                        temp.push({
                            disabled: false,
                            value: it,
                            key: it.substring(1)
                        });
                    };
                }
                return this.sortF(temp);
            },

            //查找列数据
            splitData(id) {
                let temp = [];
                for(let it in this.orignData.list) {
                    if ( parseInt(it.split(it[0])[1]) == parseInt(id)+1 ) {
                        temp.push({
                            disabled: false,
                            value: this.orignData.list[it],
                            orignValue: this.orignData.list[it],
                            key: it.charAt(0).charCodeAt(0),
                            class: '',
                            newDis: true
                        });
                    };
                }
                // 找出每一行缺失的数据
                if(temp.length < 15) {
                    for (let i = 65; i < (65+15); i++) {
                        let bool = temp.some((item) => {
                            return item.key == i;
                        })
                        if (!bool) {
                            temp.push({
                                disabled: false,
                                value: '',
                                orignValue: '',
                                key: i,
                                class: '',
                                newDis: true
                            })
                        };  
                    };
                }
                return this.sortF(temp);
            },

            //查找列数据
            splitData2(id) {
                let temp = [];
                for(let it in this.orignData.color) {
                    if ( parseInt(it.split(it[0])[1]) == parseInt(id)+1 ) {
                        temp.push(this.orignData.color[it]);
                    };
                }
                return temp;
            },

            //脏数据检测
            checkDuty(duty, k) {
                let that = this;
                for (let i = 0; i < duty.length; i++) {
                    if (duty[i].orignValue != duty[i].value) {
                        console.log(k,i);
                        that.setColor(k, i, true)
                    } else {
                        that.setColor(k, i, false)
                    }
                };
            },

            // 脏数据 设置颜色
            setColor(k, i, duty) {
                if (duty) {
                    this.origin[k].lists[i].class = 'red';
                } else {
                    this.origin[k].lists[i].class = '';
                }
                
                //eval('for (let i = 5; i < 15; i++) {this.origin[3].lists[0].value += parseInt(this.origin[3].lists[i].value)}');

                // this.origin[0].lists[0].value = parseInt(this.origin[1].lists[0].value) + parseInt(this.origin[17].lists[0].value)+ parseInt(this.origin[19].lists[0].value)+ parseInt(this.origin[20].lists[0].value)+ parseInt(this.origin[21].lists[0].value)+ parseInt(this.origin[22].lists[0].value);
                //this.origin[0].lists[1].value = parseInt(this.origin[1].lists[1].value) + parseInt(this.origin[17].lists[1].value)+ parseInt(this.origin[19].lists[1].value)+ parseInt(this.origin[20].lists[1].value)+ parseInt(this.origin[21].lists[1].value)+ parseInt(this.origin[22].lists[1].value);
                // this.origin[0].lists[2].value = parseInt(this.origin[1].lists[2].value) + parseInt(this.origin[17].lists[2].value)+ parseInt(this.origin[19].lists[2].value)+ parseInt(this.origin[20].lists[2].value)+ parseInt(this.origin[21].lists[2].value)+ parseInt(this.origin[22].lists[2].value);

                //第一行的计算表达式
                //for (let i = 0; i < 15; i++) {this.origin[0].lists[i].value = parseInt(this.origin[1].lists[i].value) + parseInt(this.origin[17].lists[i].value)+ parseInt(this.origin[19].lists[i].value)+ parseInt(this.origin[20].lists[0].value)+ parseInt(this.origin[21].lists[i].value)+ parseInt(this.origin[22].lists[i].value)}

                //第二行的表达式
               // for (let i = 0; i < 15; i++) {this.origin[1].lists[i].value = parseInt(this.origin[2].lists[i].value) + parseInt(this.origin[10].lists[i].value)}

                //第三行的表达式
                //for (var i = 0; i < 15; i++) { let temp = 0; if (i == 0) { for (let j = 3; j < 9; j++) { temp += parseInt(this.origin[j].lists[i].value)}  } else { for (let j = 3; j < 8; j++) { temp += parseInt(this.origin[j].lists[i].value) }  } this.origin[2].lists[i].value = temp }

                //第11行的表达式
                //for (var i = 0; i < 15; i++) { let temp = 0; for (let j = 11; j < 16; j++) { temp += parseInt(this.origin[j].lists[i].value) } this.origin[10].lists[i].value = temp }
            },

            //执行计算表达式
            calcF() {
                this.origin.forEach((item, index) => {
                    if (item.calc) {
                        eval(item.calc)
                    };
                })
            },

            // 报表详情接口 
            detailContent() {
                let that = this;
                let qs = require('qs');
                this.axios({
                    method: 'post',
                    url: '/v1/report/detail',
                    data: qs.stringify({
                        year: '2017',
                        type_id: this.remberData.remberType ? this.remberData.remberType : 1,
                        dept_id: this.$route.query['id'],
                        form_id: this.$route.name.split('-')[1] ? this.$route.name.split('-')[1] : 1
                    })
                })
                .then(res => {
                    let needData = res.data;
                    if (needData.code == 200) {
                        localStorage.setItem('formData', JSON.stringify(needData.data));
                        that.init();
                    } else {
                        let copData =  {
                            "list": {
                                "B4": "170",
                                "B5": 0,
                                "B6": 0,
                                "B7": 0,
                                "B8": 0,
                                "B9": 0,
                                "B12": 0,
                                "B13": 0,
                                "B14": 0,
                                "B15": 0,
                                "B16": "2222",
                                "B18": 0,
                                "B20": 0,
                                "B21": 0,
                                "B22": 0,
                                "B23": 0,
                                "C4": "17",
                                "C5": 20288,
                                "C6": "76",
                                "C7": "17228",
                                "C8": 1312,
                                "C9": 3744,
                                "C12": 5312,
                                "C13": 6432,
                                "C14": 352,
                                "C15": 192,
                                "C16": 10848,
                                "C18": 992,
                                "C20": 0,
                                "C21": "23",
                                "C22": 10400,
                                "C23": 1888,
                                "D4": 1697,
                                "D5": 768,
                                "D6": 2048,
                                "D7": 128,
                                "D8": 32,
                                "D9": 320,
                                "D12": 416,
                                "D13": 320,
                                "D14": 32,
                                "D15": 0,
                                "D16": 256,
                                "D18": 0,
                                "D20": 0,
                                "D21": 0,
                                "D22": 608,
                                "D23": 32,
                                "E4": "12",
                                "E5": "2",
                                "E6": "2",
                                "E7": "12",
                                "E8": "20",
                                "E9": "30",
                                "E12": 0,
                                "E13": 0,
                                "E14": 0,
                                "E15": 0,
                                "E16": 0,
                                "E18": 0,
                                "E20": 0,
                                "E21": 0,
                                "E22": 0,
                                "E23": 0,
                                "F4": 0,
                                "F5": 0,
                                "F6": 0,
                                "F7": "10",
                                "F8": "10",
                                "F9": "1",
                                "F12": 0,
                                "F13": 0,
                                "F14": "20",
                                "F15": "10",
                                "F16": 0,
                                "F18": 0,
                                "F20": 0,
                                "F21": 0,
                                "F22": 0,
                                "F23": 0,
                                "G4": "444440",
                                "G5": 0,
                                "G6": 0,
                                "G7": 0,
                                "G8": 0,
                                "G9": 0,
                                "G12": 0,
                                "G13": 0,
                                "G14": "2222",
                                "G15": 0,
                                "G16": 0,
                                "G18": 0,
                                "G20": 0,
                                "G21": 0,
                                "G22": 0,
                                "G23": 0,
                                "H4": 0,
                                "H5": 0,
                                "H6": 0,
                                "H7": "123",
                                "H8": 0,
                                "H9": 0,
                                "H12": 0,
                                "H13": 0,
                                "H14": 0,
                                "H15": 0,
                                "H16": 0,
                                "H18": 0,
                                "H20": 0,
                                "H21": 0,
                                "H22": 0,
                                "H23": "330",
                                "I4": 0,
                                "I5": 0,
                                "I6": 0,
                                "I7": "111",
                                "I8": 0,
                                "I9": 0,
                                "I12": "111",
                                "I13": 0,
                                "I14": 0,
                                "I15": 0,
                                "I16": 0,
                                "I18": 0,
                                "I20": 0,
                                "I21": 0,
                                "I22": 0,
                                "I23": 0,
                                "J4": 0,
                                "J5": 0,
                                "J6": 0,
                                "J7": 0,
                                "J8": 0,
                                "J9": 0,
                                "J12": 0,
                                "J13": 0,
                                "J14": 0,
                                "J15": 0,
                                "J16": 0,
                                "J18": 0,
                                "J20": 0,
                                "J21": 0,
                                "J22": 0,
                                "J23": 0,
                                "K4": 0,
                                "K5": 0,
                                "K6": 0,
                                "K7": 0,
                                "K8": 0,
                                "K9": 0,
                                "K12": 0,
                                "K13": 0,
                                "K14": 0,
                                "K15": 0,
                                "K16": 0,
                                "K18": 0,
                                "K20": 0,
                                "K21": 0,
                                "K22": 0,
                                "K23": 0,
                                "L4": 0,
                                "L5": "220",
                                "L6": 0,
                                "L7": 0,
                                "L8": 0,
                                "L9": 0,
                                "L12": 0,
                                "L13": 0,
                                "L14": 0,
                                "L15": 0,
                                "L16": 0,
                                "L18": 0,
                                "L20": 0,
                                "L21": 0,
                                "L22": 0,
                                "L23": 0,
                                "M4": 0,
                                "M5": 0,
                                "M6": 0,
                                "M7": 0,
                                "M8": 0,
                                "M9": 0,
                                "M12": 0,
                                "M13": 0,
                                "M14": 0,
                                "M15": 0,
                                "M16": 0,
                                "M18": 0,
                                "M20": 0,
                                "M21": 0,
                                "M22": 0,
                                "M23": 0,
                                "N4": 0,
                                "N5": 0,
                                "N6": 0,
                                "N7": 0,
                                "N8": 0,
                                "N9": 0,
                                "N12": 0,
                                "N13": 0,
                                "N14": 0,
                                "N15": 0,
                                "N16": 0,
                                "N18": 0,
                                "N20": 0,
                                "N21": 0,
                                "N22": 0,
                                "N23": 0,
                                "O4": 0,
                                "O5": 0,
                                "O6": 0,
                                "O7": 0,
                                "O8": 0,
                                "O9": 0,
                                "O12": 0,
                                "O13": 0,
                                "O14": 0,
                                "O15": 0,
                                "O16": 0,
                                "O18": 0,
                                "O20": 0,
                                "O21": 0,
                                "O22": 0,
                                "O23": 0,
                                "FOOTER6": 41472,
                                "FOOTER7": "97282",
                                "FOOTER8": "2222",
                                "FOOTER9": 47648,
                                "FOOTER10": 15008,
                                "FOOTER11": "2222",
                                "FOOTER12": 27904,
                                "FOOTER13": 11680,
                                "FOOTER14": 0,
                                "A23": 330,
                                "A22": 0,
                                "A21": 0,
                                "A20": 0,
                                "A19": 13,
                                "A18": 0,
                                "A17": 445553,
                                "A16": 0,
                                "A15": 10,
                                "A14": 2242,
                                "A13": 0,
                                "A12": 111,
                                "O11": 0,
                                "N11": 0,
                                "M11": 0,
                                "L11": 0,
                                "K11": 0,
                                "J11": 0,
                                "I11": 111,
                                "H11": 0,
                                "G11": 2222,
                                "F11": 30,
                                "E11": 0,
                                "D11": 1024,
                                "C11": 23136,
                                "B11": 2222,
                                "A11": 2363,
                                "A10": 4555,
                                "A9": 1,
                                "A8": 10,
                                "A7": 244,
                                "A6": 0,
                                "A5": 220,
                                "A4": 444440,
                                "O3": 0,
                                "N3": 0,
                                "M3": 0,
                                "L3": 220,
                                "K3": 0,
                                "J3": 0,
                                "I3": 111,
                                "H3": 123,
                                "G3": 444440,
                                "F3": 20,
                                "E3": 48,
                                "D3": 4673,
                                "C3": 38921,
                                "B3": 170,
                                "A3": 444915,
                                "O2": 0,
                                "N2": 0,
                                "M2": 0,
                                "L2": 220,
                                "K2": 0,
                                "J2": 0,
                                "I2": 222,
                                "H2": 123,
                                "G2": 446662,
                                "F2": 50,
                                "E2": 48,
                                "D2": 5697,
                                "C2": 62057,
                                "B2": 2392,
                                "A2": 447278,
                                "O1": 0,
                                "N1": 0,
                                "M1": 0,
                                "L1": 220,
                                "K1": 0,
                                "J1": 0,
                                "I1": 222,
                                "H1": 453,
                                "G1": 446662,
                                "F1": 50,
                                "E1": 48,
                                "D1": 6337,
                                "C1": 75360,
                                "B1": 2392,
                                "A1": 447608,
                                "H19": "10",
                                "I10": "0111",
                                "G10": "4444",
                                "G17": "444442",
                                "G19": "3",
                                "I17": "1111",
                                "FOOTER5": "4444",
                                "FOOTER1": "222",
                                "FOOTER2": "22221",
                                "FOOTER3": "1111"
                            },
                            "color": {
                                "A1": 2,
                                "A2": 2,
                                "A3": 2,
                                "A4": 2,
                                "A5": 2,
                                "A6": 2,
                                "A7": 2,
                                "A8": 2,
                                "A9": 2,
                                "A10": 2,
                                "A11": 2,
                                "A12": 2,
                                "A13": 2,
                                "A14": 2,
                                "A15": 2,
                                "A16": 2,
                                "A17": 2,
                                "A18": 2,
                                "A19": 2,
                                "A20": 2,
                                "A21": 2,
                                "A22": 2,
                                "A23": 2,
                                "B1": 2,
                                "B2": 2,
                                "B3": 2,
                                "B10": 1,
                                "B11": 2,
                                "B17": 1,
                                "B19": 1,
                                "C1": 2,
                                "C2": 2,
                                "C3": 2,
                                "C10": 1,
                                "C11": 2,
                                "C17": 1,
                                "C19": 1,
                                "D1": 2,
                                "D2": 2,
                                "D3": 2,
                                "D10": 1,
                                "D11": 2,
                                "D17": 1,
                                "D19": 1,
                                "E1": 2,
                                "E2": 2,
                                "E3": 2,
                                "E10": 1,
                                "E11": 2,
                                "E17": 1,
                                "E19": 1,
                                "F1": 2,
                                "F2": 2,
                                "F3": 2,
                                "F10": 1,
                                "F11": 2,
                                "F17": 1,
                                "F19": 1,
                                "G1": 2,
                                "G2": 2,
                                "G3": 2,
                                "G10": 1,
                                "G11": 2,
                                "G17": 1,
                                "G19": 1,
                                "H1": 2,
                                "H2": 2,
                                "H3": 2,
                                "H10": 1,
                                "H11": 2,
                                "H17": 1,
                                "H19": 1,
                                "I1": 2,
                                "I2": 2,
                                "I3": 2,
                                "I10": 1,
                                "I11": 2,
                                "I17": 1,
                                "I19": 1,
                                "J1": 2,
                                "J2": 2,
                                "J3": 2,
                                "J10": 1,
                                "J11": 2,
                                "J17": 1,
                                "J19": 1,
                                "K1": 2,
                                "K2": 2,
                                "K3": 2,
                                "K10": 1,
                                "K11": 2,
                                "K17": 1,
                                "K19": 1,
                                "L1": 2,
                                "L2": 2,
                                "L3": 2,
                                "L10": 1,
                                "L11": 2,
                                "L17": 1,
                                "L19": 1,
                                "M1": 2,
                                "M2": 2,
                                "M3": 2,
                                "M10": 1,
                                "M11": 2,
                                "M17": 1,
                                "M19": 1,
                                "N1": 2,
                                "N2": 2,
                                "N3": 2,
                                "N10": 1,
                                "N11": 2,
                                "N17": 1,
                                "N19": 1,
                                "O1": 2,
                                "O2": 2,
                                "O3": 2,
                                "O10": 1,
                                "O11": 2,
                                "O17": 1,
                                "O19": 1
                            }
                        }
                        //制造初始化默认的数据啊

                        for (let it in copData.list) {
                            copData.list[it] = 0
                        };
                        localStorage.setItem('formData', JSON.stringify(copData));
                        that.init();
                    }
                })
                .catch(err => {
                    this.$Message.error('网络请求异常');
                })
            }
		},
		created() {

		},
		mounted() {
            this.detailContent();
	    },
	}
</script>
<style scoped>
    .justify {
        text-align:justify;
        text-justify:inter-word;
        text-align-last:justify;
        padding: 0 10px;
    }
    .table-outer {
        width: 100%;
        overflow: auto; 
    }
    table tr:first-child td{
        border-top: 1px solid #222;
    }
    table tr td{
        border-bottom: 1px solid #222;
        border-right: 1px solid #222;
        text-align: center;
        height: 22px;
    }
    table tr td input {
        display: inline-block;
        display: table-cell;
        width: 100%;
        /*height: 100%;*/
        border: none;
        /*width: 50px;*/
        padding-left: 3px;
        text-align: center;
    }
    table tr td:first-child {
        border-left: 1px solid #222;
    }
    .tips-outer {
        margin-top: 15px;
    }
    .tips input {
        width: 60px;
        height: 22px;
        margin: 0 3px;
        padding-left: 3px;
    }
    .tips p {
        line-height: 24px;
    }
    .tables-containter div {
        text-align: center;
    }
    .comm-left {
        width: 120px;
        border: 1px solid #222;
        border-width: 0 1px 0 0;
        height: 100%;
    }
    .wh100 {
        width: 100%;
        height: 100%;
        display: block;
    }
    .tables {
        padding: 10px;
    }
    .tables-containter {
        border: 1px solid #222;
    }
    .tables-header {
        height: 60px;
    }
    .header-top {
        height: 40px;
        border-bottom: 1px solid #222;
        line-height: 40px;
    }
    .header-bottom {
        height: 20px;
        line-height: 20px;
        border-bottom: 1px solid #222;
    }
    .yellow {
        background: #FFF4EE;
        border: none;
        outline: medium;
        border: 1px solid #ccc;
    }
    .yellow2 {
        background: #ffd4bc;
        border: none;
        outline: medium;
    }
    .color-red {
        color: red !important;
    }
</style>
