<!--联系方式form-->
<template>
    <div class="box-flex start-box box-orient">
        <div class="info-detail box-flex">
            <Form ref="formValidate" :model="formValidate" :rules="ruleValidate" :label-width="140">
                <FormItem label="党组联系人" prop="person_name">
                    <Input v-model="formValidate.person_nam" :disabled="isDisable" placeholder="请输入党组织名称" @on-focus="selectName"></Input>
                </FormItem>
                <FormItem label="党组联系人手机号" prop="contact_phone">
                    <Input v-model="formValidate.contact_phone" :disabled="isDisable" placeholder="请输入党组织名称"></Input>
                </FormItem>
                <FormItem label="党组织办公电话" prop="person_tel">
                  <Input v-model="formValidate.person_tel" :disabled="isDisable" placeholder="请输入党组织办公电话"></Input>
                </FormItem>
                <FormItem label="所在地区：" prop="region">
                  <Cascader :data="formValidate.data" :disabled="isDisable" v-model="formValidate.region"></Cascader>
                </FormItem>
                <FormItem label="详细地址" prop="address">
                  <Input v-model="formValidate.address" :disabled="isDisable" placeholder="请输入详细地址"></Input>
                </FormItem>
                <FormItem label="邮政编码" prop="postcode">
                  <Input v-model="formValidate.postcode" :disabled="isDisable" placeholder="请输入邮政编码"></Input>
                </FormItem>

            </Form>
        </div>
        <div class="info-footer start-box box-align">
            <div class="box-flex"></div>
            <Button type="ghost" style="margin-right: 15px;"  @click="handleReset('formValidate')">取消</Button>
            <Button v-show="isDisable" type="primary" @click="editBtn">编辑</Button>
            <Button v-show="!isDisable" type="error"  @click="handleSubmit('formValidate')">保存</Button>
        </div>
    </div>
</template>
<script>
    export default {
        name: 'contactInfo',
        data() {
            return {
                isDisable:true,
                formValidate: {
                  person_name: '',
                  contact_phone: '',
                  person_tel: '',
                  region: [],
                  address: '',
                  postcode: '',
                  data: [{
                    value: 'beijing',
                    label: '北京',
                    children: [
                      {
                        value: 'gugong',
                        label: '故宫'
                      },
                      {
                        value: 'tiantan',
                        label: '天坛'
                      },
                      {
                        value: 'wangfujing',
                        label: '王府井'
                      }
                    ]
                  }, {
                    value: 'jiangsu',
                    label: '江苏',
                    children: [
                      {
                        value: 'nanjing',
                        label: '南京',
                        children: [
                          {
                            value: 'fuzimiao',
                            label: '夫子庙',
                            children: [
                              {
                                value: 'fuzimiao1',
                                label: '夫子庙子集111'
                              }
                            ]
                          }
                        ]
                      },
                      {
                        value: 'suzhou',
                        label: '苏州',
                        children: [
                          {
                            value: 'zhuozhengyuan',
                            label: '拙政园',
                          },
                          {
                            value: 'shizilin',
                            label: '狮子林',
                          }
                        ]
                      }
                    ],
                  }],
                },
                ruleValidate: {
                  person_tel: [{
                        required: true, message: '党组办公电话不能为空', trigger: 'blur'
                    }],
                },
                datas: this.infodata,
            }
        },
        props: ['infodata'],
        components: {

        },
        watch: {
            '$route' (to, from) {
                this.getInfo(this.$route.params['id'], 1);
            },
        },
        methods: {
            selectName() {
              this.$router.push({name: 'Contacts', params: {dept: this.$route.params['id']}});
            },
            editBtn: function () {
              this.isDisable=!this.isDisable;
              this.$store.commit('setEdit', {isDisable: this.isDisable});
            },
            handleSubmit (name) {
                this.$refs[name].validate((valid) => {
                    if (valid) {
                        this.$Message.success('提交成功!');
                        this.isDisable=!this.isDisable;
                        this.$router.go(-1)
                    } else {
                        this.$Message.error('表单验证失败!');
                    }
                })
            },
            handleReset (name) {
                this.$refs[name].resetFields();
                this.$router.go(-1)
            },
            getInfo(id, type) {
                let that = this;
                let qs = require('qs');
                this.axios({
                    method: 'get',
                    url: '/v1/dept/contact-detail',
                    params: {
                        dept_id: id ? id : 0,
                        opt: type ? type : 0,
                    }
                })
                .then(res => {
                    let needData = res.data;
                    if (needData.code == 200) {
                        that.datas = needData.data;
                        that.formValidate.person_name = that.datas.person_name;
                        that.formValidate.contact_phone = that.datas.contact_phone;
                        that.formValidate.person_tel = that.datas.person_tel;
                        that.formValidate.region = that.datas.region;
                        that.formValidate.address = that.datas.address;
                        that.formValidate.postcode = that.datas.postcode;
                    } else {
                        that.$Message.error(needData.msg);
                    }
                })
                .catch(err => {
                    this.$Message.error('网络请求异常');
                })
            },
        },
        created() {

        },
        mounted() {
          let that = this;
          this.getInfo(this.$route.params['id'], 1);  
          this.$store.commit('setEdit', {isDisable: this.isDisable});
        },
    }
</script>
<style scope>

</style>
