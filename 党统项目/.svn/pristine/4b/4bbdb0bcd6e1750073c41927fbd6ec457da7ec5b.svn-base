<template>
    <div class="app-main" :style="{'width':'100%','height':'100%'}" @click="closeDefault">
        <div class="layout" :style="{'width':'100%','height':'100%'}">
            <!-- 头部 -->
            <top></top>
            <Row type="flex" class="setHeight">
                <!-- 侧边栏树结构 -->
                <i-col span="5" class="layout-menu-left">
                    <Slide ref="slide" 
                        @reflashList="reflashList" 
                        @getnode="getnode"
                        :url="url"
                        :openitem="openitem"
                        :currentnode="currentnode"
                        :openlist="openlist"
                        >
                    </Slide>
                </i-col>
                <i-col span="19">
                    <!-- 筛选结构 -->
                    <div class="layout-breadcrumb">
                        <subNav ref="subnav"></subNav>
                    </div>
                    <!-- 表单主结构 -->
                    <div class="layout-content" style="position:realtive;">
                        <div class="content-padding">
                            <!-- 搜索和过滤 -->
                            <div class="search-filter start-box box-align">
                                <div class="search-content start-box box-align box-flex">
                                    <Input v-model="searchString" placeholder="请输入党组织名称" :style="{'display':'block', 'width':'35%','marginRight':'10px'}"></Input>
                                    <Button type="error" @click="slidebar">搜索</Button>
                                </div>
                                <div class="set-config">
                                    <Select style="width:100px" placeholder="列表设置">
                                         <CheckboxGroup  v-model="social">
                                            <Checkbox v-for="item in cityList" :key="item.value" :label="item.key" :disabled="item.disabled" style="display:block;border-bottom: 1px solid #ddd; padding:3px 5px; margin-right:0px;"> {{item.title}} </Checkbox>
                                        </CheckboxGroup>
                                    </Select>
                                    <Button type="ghost" :style="{'background':'#fff'}" >刷新</Button>
                                    <Button type="ghost" :style="{'background':'#fff'}">导出excel</Button>
                                </div>
                            </div>
                            <Table 
                                :style="{'marginTop':'20px'}" 
                                border 
                                :columns="headers" 
                                :data="lists" 
                                stripe 
                                highlight-row 
                                @on-row-click="goDetail"
                                ></Table>
                            <div :style='{"textAlign": "center", "marginTop": "20px"}'>
                               <Page v-show="total>6" size="small" :total="parseInt(total)" :page-size="parseInt(pags)" @on-change="goPage"></Page>
                            </div>
                        </div>
                    </div>
                    <transition name="slides">
                        <Info v-if="slideBar"></Info>
                    </transition>

                    <transition name="slides">
                        <router-view></router-view>
                    </transition>
                </i-col>
            </Row>
        </div>
    </div>
</template>
<script>
    import top from '@/components/top.vue'
    import Slide from '@/components/slide.vue'
    import subNav from '@/components/subNav.vue'
    import Info from '@/components/infoDetail/info.vue'

    export default {
        name: 'orgManage',
        data() {
            return {
                url: '/v1/trees/list',
                openitem: [],
                openlist: [],
                currentnode: '',
                searchString: '',
                slideBar: false,
                social:['name', 'partycode', 'type', 'sec', 'items', 'endtime'],
                cityList: [
                    {
                        title: '党组织名称',
                        key: 'name',
                        disabled: true,
                    },
                    {
                        title: '党组织代码',
                        key: 'partycode',
                        disabled: true,
                    },
                    {
                        title: '组织类别',
                        key: 'type',
                        disabled: false,
                    },
                    {
                        title: '党组织书记',
                        key: 'sec',
                        disabled: false,
                    },
                    {
                        title: '信息完整度',
                        key: 'items',
                        disabled: false,
                    },
                    {
                        title: '本届届满日期',
                        key: 'endtime',
                        disabled: false,
                    }
                ],
                soltname: 'mainContent',
                page_index: 1,
                page_size: 6,
                total: 0,
                pags: 6,
                
                //表单header
                headers: [
                    {
                        title: '党组织名称',
                        key: 'name',
                        sortable: true,
                    },
                    {
                        title: '党组织代码',
                        key: 'partycode',
                        sortable: true,
                    },
                    {
                        title: '组织类别',
                        key: 'type',
                        sortable: true,
                    },
                    {
                        title: '党组织书记',
                        key: 'sec',
                        sortable: true,
                    },
                    {
                        title: '信息完整度',
                        key: 'items',
                        sortable: true,
                    },
                    {
                        title: '本届届满日期',
                        key: 'endtime',
                        sortable: true,
                    }
                ],
                copyHeader: [
                    {
                        title: '党组织名称',
                        key: 'name',
                        sortable: true,
                    },
                    {
                        title: '党组织代码',
                        key: 'partycode',
                        sortable: true,
                    },
                    {
                        title: '组织类别',
                        key: 'type',
                        sortable: true,
                    },
                    {
                        title: '党组织书记',
                        key: 'sec',
                        sortable: true,
                    },
                    {
                        title: '信息完整度',
                        key: 'items',
                        sortable: true,
                    },
                    {
                        title: '本届届满日期',
                        key: 'endtime',
                        sortable: true,
                    }
                ],
                //表单数据
                lists: [],
                remberId: '',
            }
        },
        watch: {
            social(newD, oldD) {
                let that = this;
                if (newD.length > oldD.length) {
                    let oldSet = new Set(oldD);
                    let comp = newD.filter(v => {return !oldSet.has(v)});
                    let serArr = this.searchStr(comp[0], this.copyHeader, 'object');
                    let seri = this.searchStr(comp[0], this.copyHeader);
                    that.headers.splice(seri, 0, serArr);
                } else if(newD.length < oldD.length) {
                    let newSet = new Set(newD);
                    let comp = oldD.filter(v => {return !newSet.has(v)});
                    let seri = this.searchStr(comp[0], this.headers);
                    that.headers.splice(seri, 1);
                }
            }
        },
        components: {
            // Frame,
            top,
            Slide,
            subNav,
            Info
        },
        methods: {
            searchStr(str, ser, returnType) {
                for (var i = 0; i < ser.length; i++) {
                    if (ser[i].key == str) {
                        if (returnType == 'object') {
                            return ser[i];
                        } else {
                           return i; 
                        }
                    } else if(ser[i].key != str && i == (ser.length -1) ) {
                        return null;
                    }
                };
            },
            closeDefault() {
                if (this.$route.name == 'info' || this.$route.name == 'copy') {
                    this.$router.go(-1);
                };
            },
            //查看详情
            goDetail(row) {
                event.stopPropagation();
                if (this.$route.name !== 'orgManage') {
                    if (this.remberId == row.id) {
                        return;
                    };
                    if (/copy/.test(this.$route.path)) {
                       this.$router.replace({path:'/orgManage/info',query:{id: row.id}}) 
                   } else {
                       this.$router.replace({path:'/orgManage/copy',query:{id: row.id}})  
                   }
                   this.remberId = row.id;
                    //this.$router.replace({name:'info', params:{id: row.id}})
                } else {
                    this.remberId = row.id;
                    this.$router.push({path:'/orgManage/info',query:{id: row.id}})
                    //this.$router.push({name:'info', params:{id: row.id}})
                }
            },

            //search
            slidebar() {
                //this.$router.push({path:'/orgManage/info',query:{id: '123'}})
                // this.slideBar = !this.slideBar;
                this.openitem = [799, 798, 797, 792];
                this.currentnode = 799;
            },
            eidt(item) {
                this.$router.push({path: '/cms/singleVideoAdd', query: {id: item.row.id}});
            },
            // tree emit events（events up）
            reflashList(item) {
                this.lists = [];
                this.getList(item.id, 0);
            },
            // main list
            getList(id, type) {
                let that = this;
                let qs = require('qs');
                this.axios({
                    method: 'get',
                    url: '/v1/dept/list',
                    params: {
                        dept_id: id,
                        opt: type ? type : 0,
                    }
                })
                .then(res => {
                    let needData = res.data;
                    if (needData.code == 200) {
                        needData.data.forEach(item => {
                            that.lists.push(item);
                        });
                    } else {
                        that.$Message.error(needData.msg);
                    }
                })
                .catch(err => {
                    this.$Message.error('网络请求异常');
                })    
            },
            goPage(p) {
                this.lists = [];
                this.page_index = p;
                // this.getList();
            },
            getnode(node) {
                console.log(node)
            }

        },
        created() {
                
        },
        mounted() { 
            // this.$watch('social', function(newD, oldD) {
            //     if (newD != oldD) {
            //         console.log(newD)
            //     };
            // });            
            this.getList(68);
            this.openlist = [798, 797, 792, 796];

            console.log(this.$refs)
        },
    }
</script>
<style scope>
    .slides-enter-active {
      transition: all .3s ease;
    }
    .slides-leave-active {
      transition: all .8s ease;
    }
    .slides-enter, .slides-leave-to
    {
      transform: translateX(800px);
      opacity: 0;
    }
</style>