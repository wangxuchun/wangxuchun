<template>
    <div class="app-main" :style="{'width':'100%','height':'100%'}">
        <div class="layout" :style="{'width':'100%','height':'100%'}">
            <!-- 头部 -->
            <top></top>
            <Row type="flex" class="setHeight">
                <!-- 侧边栏树结构 -->
                <i-col span="5" class="layout-menu-left">
                    <Slide ref="slide" @reflashList="reflashList"></Slide>
                </i-col>
                <i-col span="19">
                    <!-- 筛选结构 -->
                    <div class="layout-breadcrumb">
                        <tags ref="tags"></tags>
                    </div>
                    <!-- 表单主结构 -->
                    <div class="layout-content" style="position:realtive;">
                        <div class="content-padding">
                            <!-- 搜索和过滤 -->
                            <div class="search-filter start-box box-align">
                                <div class="search-content start-box box-align box-flex">
                                    <Input v-model="searchString" placeholder="请输入党组织名称" :style="{'display':'block', 'width':'35%','marginRight':'10px'}"></Input>
                                    <Button type="primary" @click="slidebar">搜索</Button>
                                </div>
                                <div class="set-config">
                                    <Select v-model="model10" multiple style="width:260px">
                                        <Option v-for="item in cityList" :value="item.value" :key="item.value">{{ item.label }}</Option>
                                    </Select>
                                    <Button type="ghost" :style="{'background':'#fff'}" >刷新</Button>
                                    <Button type="ghost" :style="{'background':'#fff'}">导出excel</Button>
                                </div>
                            </div>
                            <Table 
                                :style="{'marginTop':'20px'}" 
                                border 
                                :columns="headers" 
                                :data="lists" 
                                stripe 
                                @on-row-click="goDetail"
                                ></Table>
                            <div :style='{"textAlign": "center", "marginTop": "20px"}'>
                               <Page v-show="total>6" size="small" :total="parseInt(total)" :page-size="parseInt(pags)" @on-change="goPage"></Page>
                            </div>
                        </div>
                    </div>
                    <transition name="slides">
                        <Info v-if="slideBar"></Info>
                    </transition>

                    <transition name="slides">
                        <router-view></router-view>
                    </transition>
                </i-col>
            </Row>
        </div>
    </div>
</template>
<script>
    import top from '@/components/top.vue'
    import Slide from '@/components/slide.vue'
    import tags from '@/components/tags.vue'
    import Info from '@/components/infoDetail/info.vue'

    export default {
        name: 'orgManage',
        data() {
            return {
                searchString: '',
                slideBar: false,
                cityList: [
                    {
                        value: 'beijing',
                        label: '北京市'
                    },
                    {
                        value: 'shanghai',
                        label: '上海市'
                    },
                    {
                        value: 'shenzhen',
                        label: '深圳市'
                    },
                    {
                        value: 'hangzhou',
                        label: '杭州市'
                    },
                    {
                        value: 'nanjing',
                        label: '南京市'
                    },
                    {
                        value: 'chongqing',
                        label: '重庆市'
                    },
                ],
                model10: [],
                soltname: 'mainContent',
                page_index: 1,
                page_size: 6,
                total: 0,
                pags: 6,
                //表单header
                headers: [
                    {
                        title: '党组织名称',
                        key: 'name',
                        sortable: true,
                    },
                    {
                        title: '党组织代码',
                        key: 'partycode',
                        sortable: true,
                    },
                    {
                        title: '组织类别',
                        key: 'type',
                        sortable: true,
                    },
                    {
                        title: '党组织书记',
                        key: 'sec',
                        sortable: true,
                    },
                    {
                        title: '信息完整度',
                        key: 'items',
                        sortable: true,
                    },
                    {
                        title: '本届届满日期',
                        key: 'endtime',
                        sortable: true,
                    }
                ],
                //表单数据
                lists: [],
            }
        },
        computed: {
        },
        watch: {
            // '$route' (to, from) {
            //     console.log(to)
            //     if (/info2/.test(to.path)) {
            //         //this.$router.replace({name:'info2', params:{id: row.id}})
            //         this.$router.replace({path: '/orgManage/info',query: to.query})
            //     } else {
            //         this.$router.replace({path: '/orgManage/info',query: to.query})
            //     }
            // }
        },
        components: {
            // Frame,
            top,
            Slide,
            tags,
            Info
        },
        methods: {
            //查看详情
            goDetail(row) {
                if (this.$route.name !== 'orgManage') {
                    if (/copy/.test(this.$route.path)) {
                       this.$router.replace({path:'/orgManage/info',query:{id: row.id}}) 
                   } else {
                       this.$router.replace({path:'/orgManage/copy',query:{id: row.id}})  
                   }
                   
                    //this.$router.replace({name:'info', params:{id: row.id}})
                } else {
                    this.$router.push({path:'/orgManage/info',query:{id: row.id}})
                    //this.$router.push({name:'info', params:{id: row.id}})
                }
            },

            //search
            slidebar() {
                //this.$router.push({path:'/orgManage/info',query:{id: '123'}})
                // this.slideBar = !this.slideBar;
            },
            eidt(item) {
                this.$router.push({path: '/cms/singleVideoAdd', query: {id: item.row.id}});
            },
            // tree emit events（events up）
            reflashList(item) {
                this.lists = [];
                this.getList(item.id, 0);
            },
            // main list
            getList(id, type) {
                let that = this;
                let qs = require('qs');
                this.axios({
                    method: 'get',
                    url: '/v1/dept/list',
                    params: {
                        dept_id: id,
                        opt: type ? type : 0,
                    }
                })
                .then(res => {
                    let needData = res.data;
                    if (needData.code == 200) {
                        needData.data.forEach(item => {
                            that.lists.push(item);
                        });
                    } else {
                        that.$Message.error(needData.msg);
                    }
                })
                .catch(err => {
                    this.$Message.error('网络请求异常');
                })    
            },
            goPage(p) {
                this.lists = [];
                this.page_index = p;
                // this.getList();
            }

        },
        created() {
                
        },
        mounted() {             
            this.getList(68);
        },
    }
</script>
<style scope>
    .slides-enter-active {
      transition: all .3s ease;
    }
    .slides-leave-active {
      transition: all .8s ease;
    }
    .slides-enter, .slides-leave-to
    {
      transform: translateX(800px);
      opacity: 0;
    }
</style>