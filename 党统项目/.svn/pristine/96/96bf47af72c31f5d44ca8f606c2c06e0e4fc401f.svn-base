<template>
  <div>
    <Button @click="setDefault">click me</Button>
    <el-tree 
      :data="lists" 
      :props="defaultProps"
      default-expand-all 
      node-key="nid" 
      :default-expanded-keys="expanded" 
      accordion 
      :highlight-current="true" 
      :current-node-key="current"
      @node-click="handleNodeClick" 
      :render-content="renderContent"></el-tree>
  <!-- <el-tree 
      :data="lists" 
      :props="defaultProps" 
      :load="loadNode"
      lazy
      @node-click="handleNodeClick" 
      :render-content="renderContent"></el-tree> -->
  </div>
  
</template>
<script>
  import Vue from 'vue'
  import { Tree } from 'element-ui'
  Vue.use(Tree)
  export default {
    name: 'slide',
    data() {
      return {
        lists: [],
        expanded: [],
        current: '',
        defaultProps: {
          children: 'children',
          label: 'name'
        }
      }
    },
    props: ['openitem', 'currentnode'],
    watch: {

    },
    methods: {
      // loadNode(node, resolve) {
      //   let that = this;
      //   console.log(node)
      //   this.axios({
      //         method: 'get',
      //         url: '/v1/trees/list',
      //         params: {'dept_id': ''}
      //     })
      //     .then(res => {
      //         let needData = res.data;
      //         if (needData.code == 200) {
      //             needData.data.forEach(item => {
      //               that.lists.push(item);
      //             })
                  
      //             resolve(that.lists);
      //             setTimeout(() => {
      //               var data;
                    
      //                 data = [{
      //                   name: 'zone' + this.count++
      //                 }, {
      //                   name: 'zone' + this.count++
      //                 }];
                    

      //               resolve(data);
      //             }, 500);
                  
      //         } else {
      //             that.$Message.error(needData.msg);
      //         }
      //     })
      //     .catch(err => {
      //         that.$Message.error('网络请求异常');
      //     }) 
          
      //   if (node.level === 0) {
          
      //   }
      //   // if (node.level > 3) return resolve([]);

      //   // var hasChild;
      //   // if (node.data.name === 'region1') {
      //   //   hasChild = true;
      //   // } else if (node.data.name === 'region2') {
      //   //   hasChild = false;
      //   // } else {
      //   //   hasChild = Math.random() > 0.5;
      //   // }

      //   // setTimeout(() => {
      //   //   var data;
      //   //   if (hasChild) {
      //   //     data = [{
      //   //       name: 'zone' + this.count++
      //   //     }, {
      //   //       name: 'zone' + this.count++
      //   //     }];
      //   //   } else {
      //   //     data = [];
      //   //   }

      //   //   resolve(data);
      //   // }, 500);
      // },
      setTree() {
        this.lists[0].children.push({
                "nid": "777",//党组织id
                "name": "天津市机关工委",//名称
                "type": "5585",//类型id
                "isParent": "true",//是否为父级节点
                "open": "false",//当前展开状态
                "type_icon": "3"//对应图标  
            },);
      },
      setDefault() {
        this.expanded = [68];
        this.current = 799;
      },
      handleNodeClick(data) {
        console.log(data);
        let type = data.type;
        this.setTree();
      },
      renderContent(h, { node, data, store }) {
        return (
          <span>
            <span>
              <span style="background:red;">{data.type_icon}</span>
              <span>{node.label}</span>
            </span>
          </span>);
      },
      getTreeData() {
        let qs = require('qs');
        let that = this;   

        this.axios({
            method: 'get',
            url: '/v1/trees/list',
            params: {'dept_id': ''}
        })
        .then(res => {
            let needData = res.data;
            if (needData.code == 200) {
                needData.data.forEach(item => {
                  that.lists.push(item);
                })
                console.log(that.lists)
                that.$nextTick(function() {
                  that.expanded = [68];
                  that.current = 799;
                })
                // console.log(that.lists)
            } else {
                that.$Message.error(needData.msg);
            }
        })
        .catch(err => {
            that.$Message.error('网络请求异常');
        }) 
      }
    },
    created() {
      this.getTreeData();
    },
    mounted() {
    },
  }
</script>
<style scope>
  body,html,#app {
    width: 100%;
    height: 100%;
  }

  .layout{
    border: 1px solid #d7dde4;
    background: #f5f7f9;
    position: relative;
  }
  .layout-breadcrumb{
    padding: 10px 15px 0;
  }
  .layout-content{
    min-height: 200px;
    margin: 15px;
    overflow: hidden;
    background: #fff;
    border-radius: 4px;
  }
  .layout-content-main{
    padding: 10px;
  }
  .layout-copy{
    text-align: center;
    padding: 10px 0 20px;
    color: #9ea7b4;
  }
  .layout-menu-left{
    background: #464c5b;
  }
  .layout-header{
    height: 60px;
    background: #fff;
    box-shadow: 0 1px 1px rgba(0,0,0,.1);
  }
  .layout-logo-left{
    width: 90%;
    height: 30px;
    background: #5b6270;
    border-radius: 3px;
    margin: 15px auto;
  }
</style>
