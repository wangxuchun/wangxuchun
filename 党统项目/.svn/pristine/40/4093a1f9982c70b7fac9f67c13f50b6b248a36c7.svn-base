<template>
    <div class="box-flex start-box box-orient">
        <div class="info-detail box-flex">
            <Row :gutter="16" style="border-bottom: 1px solid #ddd;" class="unit-style">
              <Form ref="unitManageForm" :model="unitManageForm" :rules="ruleValidate" label-position="right" :label-width="130">
                <Col span="12">
                  <FormItem label="类型:" prop="org_type">
                      <Select v-model="unitManageForm.org_type" :disabled="isDisable" placeholder="请选择">
                        <Option :disabled="item.choosed==0" v-for="item in org_module" :key="item.id" :value="item.id">{{item.name}}</Option>
                      </Select>
                  </FormItem>
                  <FormItem label="单位(部门)名称:" prop="full_name">
                    <Input v-model="unitManageForm.full_name" :disabled="isDisable" placeholder="请输入单位名称"></Input>
                  </FormItem>
                  <FormItem label="单位隶属关系:" prop="type_id">
                    <Select v-model="unitManageForm.type_id" :disabled="isDisable" placeholder="请选择">
                      <Option :disabled="item.choosed==0" v-for="item in type_module" :key="item.id" :value="item.id">{{item.name}}</Option>
                    </Select>
                  </FormItem>
                  <FormItem label="单位性质类别:" prop="prop_id">
                    <Select v-model="unitManageForm.prop_id" :disabled="isDisable" placeholder="请选择">
                      <Option :disabled="item.choosed==0" v-for="item in prop_module" :key="item.id" :value="item.id">{{item.name}}</Option>
                    </Select>
                  </FormItem>
                  <FormItem label="所属行业:" prop="belong_type" >
                    <select style="outline: none;;width: 100%;height: 30px;line-height: 30px;border-radius: 4px;border: 1px solid #dddee1;" v-model="unitManageForm.belong_type" placeholder="请选择">
                      <option :disabled="item.choosed==0" v-for="item in belong_module" :key="item.id" :value="item.id">{{item.name}}</option>
                    </select>
                  </FormItem>
                  <FormItem label="经济类型:" prop="economic_type	">
                    <Select v-model="unitManageForm.economic_type" :disabled="isDisable" placeholder="请选择">
                      <Option :disabled="item.choosed==0" v-for="item in economic_moudle" :key="item.id" :value="item.id">{{item.name}}</Option>
                    </Select>
                  </FormItem>
                  <FormItem label="企业类型:" prop="prop_type	">
                    <Select v-model="unitManageForm.prop_type" :disabled="isDisable" placeholder="请选择">
                      <Option :disabled="item.choosed==0" v-for="item in prop_moudle" :key="item.id" :value="item.id">{{item.name}}</Option>
                    </Select>
                  </FormItem>
                  <FormItem label="企事业单位类型:" prop="ei_org_type	">
                    <Select v-model="unitManageForm.ei_org_type" :disabled="isDisable" placeholder="请选择">
                      <Option :disabled="item.choosed==0" v-for="item in ei_org_module" :key="item.id" :value="item.id">{{item.name}}</Option>
                    </Select>
                  </FormItem>
                  <FormItem label="企业规模:" prop="scope">
                    <Select v-model="unitManageForm.scope" :disabled="isDisable" placeholder="请选择">
                      <Option :disabled="item.choosed==0" v-for="item in scope_module" :key="item.id" :value="item.id">{{item.name}}</Option>
                    </Select>
                  </FormItem>
                  <FormItem label="在岗职工数:" prop="number">
                    <Input v-model="unitManageForm.number	" :disabled="isDisable" placeholder="请输入在岗职工数"></Input>
                  </FormItem>
                  <FormItem label="35岁以下在岗职工数:" prop="number_35">
                    <Input v-model="unitManageForm.number_35	" :disabled="isDisable" placeholder="请输入35岁以下在岗职工数"></Input>
                  </FormItem>
                  <FormItem label="在岗职工工人数:" prop="number_workers">
                    <Input v-model="unitManageForm.number_workers	" :disabled="isDisable" placeholder="请输入在岗职工工人数"></Input>
                  </FormItem>
                  <FormItem label="在岗职工技术人员数:" prop="number_artisan">
                    <Input v-model="unitManageForm.number_artisan	" :disabled="isDisable" placeholder="请输入在岗职工技术数"></Input>
                  </FormItem>
                </Col>
                <Col span="12" v-if="unitManageForm.org_type==3765">
                  <p style="color: #f34747;margin-bottom: 20px;font-size: 14px">* 以下为法人单位填写</p>
                  <FormItem label="单位统一社会信用代码:" prop="orgcode">
                    <Input v-model="unitManageForm.orgcode	" :disabled="isDisable" placeholder="请输入在岗职工技术数"></Input>
                  </FormItem>
                  <FormItem label="单位建立党的基层组织情况:" prop="base_depts">
                    <Select v-model="unitManageForm.base_depts" :disabled="isDisable" placeholder="请选择">
                      <Option :disabled="item.choosed==0" v-for="item in base_depts_module" :key="item.id" :value="item.id">{{item.name}}</Option>
                    </Select>
                  </FormItem>
                  <FormItem label="政府部门建立党组织情况:" prop="org_depts">
                    <Select v-model="unitManageForm.org_depts" :disabled="isDisable" placeholder="请选择">
                      <Option :disabled="item.choosed==0" v-for="item in org_depts_module" :key="item.id" :value="item.id">{{item.name}}</Option>
                    </Select>
                  </FormItem>
                  <FormItem label="街道、乡镇、社区、村标识:" prop="is_town">
                    <Select v-model="unitManageForm.is_town" :disabled="isDisable" placeholder="请选择">
                      <Option :disabled="item.choosed==0" v-for="item in is_town_module" :key="item.id" :value="item.id">{{item.name}}</Option>
                    </Select>
                  </FormItem>
                  <FormItem label="建立党员服务机构标识:" prop="if_party_service">
                    <Select v-model="unitManageForm.if_party_service" :disabled="isDisable" placeholder="请选择选举方式">
                      <Option value="1">是</Option>
                      <Option value="2">否</Option>
                    </Select>
                  </FormItem>
                  <FormItem label="建立党员志愿者队伍:" prop="if_party_volunteers">
                    <Select v-model="unitManageForm.if_party_volunteers" :disabled="isDisable" placeholder="请选择选举方式">
                      <Option value="1">是</Option>
                      <Option value="2">否</Option>
                    </Select>
                  </FormItem>
                  <FormItem label="农村专业合作组织标识:" prop="if_teamwork">
                    <Select v-model="unitManageForm.if_teamwork" :disabled="isDisable" placeholder="请选择选举方式">
                      <Option value="1">是</Option>
                      <Option value="2">否</Option>
                    </Select>
                  </FormItem>
                  <p style="font-weight: bold;margin-bottom: 10px;">“两新”组织情况</p>
                  <FormItem label="党建指导员姓名:" prop="">
                    <!--<Input v-model="unitManageForm.instructores	" readonly :disabled="isDisable" placeholder=""></Input>-->
                    <Select v-model="model10" multiple placeholder="请选择">
                      <Option v-for="item in insList" :value="item.uid" :key="item.uid">{{item.real_name}}</Option>
                    </Select>


                  </FormItem>
                  <div class="add-member" @click="addTeacher" style="margin-top: -16px;;padding-left: 108px;color: #d73826;cursor: pointer;font-size: 14px"><Icon type="android-add"></Icon><span style="margin-left: 6px;">添加</span></div>
                  <p style="font-weight: bold;margin-bottom: 10px;">非公有制经济组织</p>
                  <FormItem label="法人代表是否是党员:" prop="is_party_legal_person">
                    <Select v-model="unitManageForm.is_party_legal_person" :disabled="isDisable" placeholder="请选择选举方式">
                      <Option value="1">是</Option>
                      <Option value="2">否</Option>
                    </Select>
                  </FormItem>
                  <FormItem label="法人代表兼任企业党组织书记:" prop="is_dept_leader">
                    <Select v-model="unitManageForm.is_dept_leader" :disabled="isDisable" placeholder="请选择选举方式">
                      <Option value="1">是</Option>
                      <Option value="2">否</Option>
                    </Select>
                  </FormItem>
                  <p style="font-weight: bold;margin-bottom: 10px;">社会组织</p>
                  <FormItem label="民办非企业单位类型:" prop="private_org_type">
                    <Select v-model="unitManageForm.private_org_type" :disabled="isDisable" placeholder="请选择">
                      <Option :disabled="item.choosed==0" v-for="item in private_org_module" :key="item.id" :value="item.id">{{item.name}}</Option>
                    </Select>
                  </FormItem>
                  <FormItem label="中介组织类型:" prop="mediator_type">
                    <Select v-model="unitManageForm.mediator_type" :disabled="isDisable" placeholder="请选择">
                      <Option :disabled="item.choosed==0" v-for="item in mediator_module" :key="item.id" :value="item.id">{{item.name}}</Option>
                    </Select>
                  </FormItem>
                </Col>
              </Form>
            </Row>
        </div>
        <div class="info-footer start-box box-align">
            <div class="box-flex"></div>
            <Button type="ghost" style="margin-right: 15px;"  @click="handleReset('formValidate')">取消</Button>
            <!--<Button v-show="isDisable" type="primary" @click="editBtn">编辑</Button>-->
            <Button v-show="!isDisable" type="error" @click="handleSubmit('unitManageForm')">保存</Button>
        </div>
        <UnitTeacher v-if="isShow" @setCancer="setCancer" @setOk="setOk"></UnitTeacher>
    </div>
</template>
<script>
    import UnitTeacher from '@/components/pop/unit/UnitTeacher.vue'
    export default {
        name: 'unitForm',
        data() {
            return {
                isShow:false,
                isDisable:false,
                model10: [],
                insList:[],
                cityList: [
                    {
                        value: 'beijing',
                        label: '北京市'
                    },
                    {
                        value: 'shanghai',
                        label: '上海市'
                    },
                    {
                        value: 'shenzhen',
                        label: '深圳市'
                    },
                    {
                        value: 'hangzhou',
                        label: '杭州市'
                    },
                    {
                        value: 'nanjing',
                        label: '南京市'
                    },
                    {
                        value: 'chongqing',
                        label: '重庆市'
                    }
                ],
                //指导员数据源
                org_module:[],//单位类型数据源
                type_module:[],//单位隶属关系数据源
                prop_module:[],//性质类别数据源
                belong_module:[],//所属行业数据源
                scope_module:[],//企业规模数据源
                economic_moudle:[],//经济类型数据源
                prop_moudle:[],//企业类型数据源
                ei_org_module:[],//企事业单位数据源
                base_depts_module:[],//单位建立党的基层组织情况
                org_depts_module:[],//政府建立党的基层组织情况
                is_town_module:[],//乡镇建立党的基层组织情况
                private_org_module:[],//民办非企业单位类型数据源
                mediator_module:[],//中介类型
                unitManageForm: {
                  org_type:'',//类型
                  full_name:'',//单位名称
                  type_id:'',//隶属关系
                  economic_type:'',//经济类型
                  prop_id:'',//单位性质
                  belong_type:'',//所属行业
                  scope:'',//企业规模
                  prop_type: '',//企业类型
                  ei_org_type:'',//企事业单位类型
                  number:'',//在岗职工数
                  number_35:'',//35岁以下职工数
                  number_workers:'',//在岗职工工人数:
                  number_artisan:'',//在岗职工技术人员数:
                  orgcode:'',//单位统一代码
                  instructores_desc:[],//显示指导员姓名
                  instructor_uids:[],//指导员姓名
                  base_depts:'',//单位情况
                  org_depts:'',//政府情况
                  is_town:'',//乡镇情况
                  if_party_service:'',//是否建立党员服务机构标识
                  if_party_volunteers:'',//建立党员志愿者队伍
                  if_teamwork:'',//农村专业合作组织标识
                  is_dept_leader:'',//法人代表是否为党委书记
                  private_org_type:'',//民办非企业单位类型
                  is_party_legal_person:'',//法人代表是否为党员
                  mediator_type:''//中介
                },
                ruleValidate: {
                  prop_type: [{
                        required: true, message: '党组织代码不能为空', trigger: 'change'
                    }],
                },
                datas: this.infodata,
                dangType: [],
                realtive: [],
                voteStyle: []
            }
        },
        props: ['infodata'],
        components: {
          UnitTeacher
        },
        watch: {
            '$route' (to, from) {
                this.getInfo(this.$route.params['id'],1);
                //this.getType();
                //this.getRealtive();
            },
        },
        methods: {
            //添加指导员
            addTeacher(){
              this.isShow=true;
            },
            setCancer(item) {
              this.isShow=false;
            },
          setOk(item) {
            this.isShow=false;
            let real_name = [];//存储指导员姓名
            console.log(item);



            item.selection.forEach(item=>{
              real_name.push(item.real_name);
            })




            //this.unitManageForm.instructores=real_name.join()
          },
            //党组织类型
            getType(type,module) {
                let that = this;
                let qs = require('qs');
                this.axios({
                    method: 'get',
                    url: '/v1/dictionary/get-list-by-type',
                    params: {
                        type: type,
                    }
                })
                .then(res => {
                    let needData = res.data;
                    if (needData.code == 200) {
                        needData.data.forEach(item => that[module].push(item))
                    } else {
                        that.$Message.error(needData.msg);
                    }
                })
                .catch(err => {
                    this.$Message.error('网络请求异常');
                })
            },
            editBtn() {
            },
            handleSubmit (name) {
                let that = this;
                let qs = require("qs");
                this.$refs[name].validate((valid) => {
                    if (valid) {
                      let url='';
                      //0:新增  1:编辑
                      if (that.$route.params.unitState=='1'){
                        that.unitManageForm.id = that.$route.params.id;
                         url= '/v1/org/updateunit';//编辑接口
                      }else{
                        that.unitManageForm.org_id = '1';
                         url = '/v1/org/addunit';//新增接口

                      }
                      this.axios({
                        method: 'post',
                        url: url,
                        data: qs.stringify(
                          that.unitManageForm
                        )
                      })
                      .then(res=>{
                        let needData = res.data;
                        if(needData.code=='200'){
                          console.log(needData);

                        }else{
                          this.$Message.error(needData.msg);
                        }
                      })
                      .catch(err => {
                        this.$Message.error('网络请求异常');
                      })



                    } else {
                        this.$Message.error('表单验证失败!');
                    }
                })
            },
            handleReset (name) {
//                this.$refs[name].resetFields();
                this.$router.go(-1)
            },
            getInfo(id, type) {
                let that = this;
                let qs = require('qs');
              console.log(this.$store.state.remberId);
                if (this.$route.params.unitState=='0'){
                  return  ;
                }


                this.axios({
                    method: 'get',
                    url: '/v1/org/unitinfo',
                    params: {
                      id: id ? id : 0,
                      opt: type ? type : 0,
                    }
                })
                .then(res => {
                    let needData = res.data;
                    if (needData.code == 200) {
                      //赋值
                      let postData = Object.assign({}, needData.data)
                      this.insList = Object.assign([],needData.data.instructor_uids);
                      console.log(this.insList);

                      this.insList.forEach(item => {
                        that.model10.push(item.uid);
                      })

                        // console.log(that.unitManageForm.instructores_desc)
                        // that.$nextTick(() => {
                        //   this.insList.forEach(item => {
                        //     that.unitManageForm['instructores_desc'].push(item.uid);
                        //   })
                        // })



                      console.log(this.unitManageForm.instructores_desc);
//                      return ;
                      that.unitManageForm = postData;

//                      that.unitManageForm.full_name=needData.data.full_name;//单位名称
//                      that.unitManageForm.belong_type=needData.data.belong_type;//单位所属行业
//                      that.unitManageForm.prop_id=needData.data.prop_id;//单位性质类别
//                      that.unitManageForm.type_id=needData.data.type_id;//单位隶属关系
//                      that.unitManageForm.economic_type=that.unitManageForm.economic_type//经济类型
//                      that.unitManageForm.is_town_module=that.unitManageForm.is_town_module//经济类型
//                      that.unitManageForm.if_party_service=that.unitManageForm.if_party_service//是否建立党员服务机构标识
//                      that.unitManageForm.number=needData.data.number;//在岗职工数
//                      that.unitManageForm.number_workers=needData.data.number_workers;//在岗职工数
//                      that.unitManageForm.number_artisan=needData.data.number_artisan;//在岗职工数
//                      that.unitManageForm.number_35=needData.data.number_35;//35岁以下岗职工数
//                      that.unitManageForm.scope=needData.data.scope;//企业规模
//                      that.unitManageForm.is_party_legal_person=needData.data.is_party_legal_person;//是否为党员
//                      that.unitManageForm.is_dept_leader=needData.data.is_dept_leader;//是否为党委书记
//                      that.unitManageForm.private_org_type=needData.data.private_org_type;//民办企业类型
//                      that.unitManageForm.mediator_type=needData.data.mediator_type;//中介企业类型


                    } else {
                        that.$Message.error(needData.msg);
                    }
                })
                .catch(err => {
                    this.$Message.error('网络请求异常');
                })
            },
        },
        created() {

        },
        mounted() {
            let that = this;
            this.$store.commit('setEdit', {isDisable: this.isDisable});
            this.getInfo(this.$route.params['id'], 1);
            this.getType("B01024","type_module");//获取隶属单位
            this.getType("B90006","prop_module");//获取隶属单位
            this.getType("GB4754","belong_module");//获取所属行业
            this.getType("B99004","scope_module");//企业规模
            this.getType("B01023","economic_moudle");//经济类型
            this.getType("DT05","org_module");//单位类型
            this.getType("B99001","prop_moudle");//单位类型
            this.getType("F01025","ei_org_module");//事业单位类型
            this.getType("B99011","base_depts_module");//单位建立党的基层组织情况
            this.getType("DT06","org_depts_module");//政府建立党的基层组织情况
            this.getType("KZ22","is_town_module");//乡镇建立党的基层组织情况
            this.getType("DT12","private_org_module");//民办企业类型
            this.getType("KZ18","mediator_module");//民办企业类型


        },
    }
</script>
<style scope>
  .unit-style .ivu-form-item-label{
    line-height: 18px;
    position: relative;
    top: -5px;
    width: 100px;
  }
</style>
